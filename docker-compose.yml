version: '3.8'

services:
  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    command: [
      "sh",
      "-c",
      "redis-server --notify-keyspace-events Ex"
    ]

  user-db:
    container_name: user-db
    image: postgres:15.8
    ports:
      - "5000:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  performance-db:
    container_name: performance-db
    image: postgres:15.8
    ports:
      - "5001:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  order-db:
    container_name: order-db
    image: postgres:15.8
    ports:
      - "5002:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  payment-db:
    container_name: payment-db
    image: postgres:15.8
    ports:
      - "5003:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    healthcheck:
      test: [ "CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

  eureka-server:
    container_name: eureka-server
    image: ticketping/eureka-server:latest
    ports:
      - "10000:10000"

  auth-server:
    container_name: auth-server
    image: ticketping/auth-server:latest
    env_file:
      - .env
    environment:
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    ports:
      - "10010:10010"
    depends_on:
      user-db:
        condition: service_healthy
      eureka-server:
        condition: service_started

  gateway-server:
    container_name: gateway-server
    image: ticketping/gateway-server:latest
    env_file:
      - .env
    environment:
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    ports:
      - "10020:10020"
    depends_on:
      auth-server:
        condition: service_started
      user-server:
        condition: service_started
      performance-server:
        condition: service_started
      order-server:
        condition: service_started
      payment-server:
        condition: service_started
      queue-manage-server:
        condition: service_started
      redis:
        condition: service_healthy

  user-server:
    container_name: user-server
    image: ticketping/user-server:latest
    ports:
      - "10021:10021"
    depends_on:
      user-db:
        condition: service_healthy
      eureka-server:
        condition: service_started

  performance-server:
    container_name: performance-server
    image: ticketping/performance-server:latest
    ports:
      - "10022:10022"
    depends_on:
      performance-db:
        condition: service_healthy
      eureka-server:
        condition: service_started

  order-server:
    container_name: order-server
    image: ticketping/order-server:latest
    ports:
      - "10023:10023"
    depends_on:
      order-db:
        condition: service_healthy
      eureka-server:
        condition: service_started
      kafka:
        condition: service_healthy

  payment-server:
    container_name: payment-server
    image: ticketping/payment-server:latest
    env_file:
      - .env
    environment:
      - SECRET_KEY=${SECRET_KEY}
      - PUBLIC_KEY=${PUBLIC_KEY}
      - WEBHOOK_KEY=${WEBHOOK_KEY}
    ports:
      - "10024:10024"
      - "5005:5005"
    depends_on:
      payment-db:
        condition: service_healthy
      eureka-server:
        condition: service_started

  queue-manage-server:
    container_name: queue-manage-server
    image: ticketping/queue-manage-server:latest
    ports:
      - "10031:10031"
    depends_on:
      redis:
        condition: service_healthy
      eureka-server:
        condition: service_started
      kafka:
        condition: service_healthy

networks:
  default:
    driver: bridge