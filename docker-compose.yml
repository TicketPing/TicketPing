version: '3.8'

services:
  redis:
    container_name: redis
    image: redis:latest
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  user-db:
    container_name: user-db
    image: postgres:15.8
    ports:
      - "5000:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  performance-db:
    container_name: performance-db
    image: postgres:15.8
    ports:
      - "5001:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  payment-db:
    container_name: payment-db
    image: postgres:15.8
    ports:
      - "5003:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  eureka-server:
    container_name: eureka-server
    image: ticketping/eureka-server:latest
    ports:
      - "10000:10000"

  auth-server:
    container_name: auth-server
    image: ticketping/auth-server:latest
    ports:
      - "10010:10010"
    depends_on:
      user-db:
        condition: service_healthy
      eureka-server:
        condition: service_started

  user-server:
    container_name: user-server
    image: ticketping/user-server:latest
    ports:
      - "10021:10021"
    depends_on:
      user-db:
        condition: service_healthy
      eureka-server:
        condition: service_started

  performance-server:
    container_name: performance-server
    image: ticketping/performance-server:latest
    ports:
      - "10022:10022"
    depends_on:
      performance-db:
        condition: service_healthy
      eureka-server:
        condition: service_started

  payment-server:
    container_name: payment-server
    image: ticketping/payment-server:latest
    ports:
      - "10024:10024"
    depends_on:
      payment-db:
        condition: service_healthy
      eureka-server:
        condition: service_started

  queue-manage-server:
    container_name: queue-manage-server
    image: ticketping/queue-manage-server:latest
    ports:
      - "10031:10031"
    depends_on:
      redis:
        condition: service_healthy
      eureka-server:
        condition: service_started

  client-channel-server:
    container_name: client-channel-server
    image: ticketping/client-channel-server:latest
    ports:
      - "10032:10032"
    depends_on:
      redis:
        condition: service_healthy
      eureka-server:
        condition: service_started

  order-redis:
    container_name: order-redis
    image: redis:latest
    ports:
      - "7379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli","ping" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  order-db:
    container_name: order-db
    image: postgres:15.8
    ports:
      - "5002:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  order-server:
    container_name: order-server
    image: ticketping/order-server:latest
    ports:
      - "10023:10023"
    depends_on:
      order-db:
        condition: service_healthy
      eureka-server:
        condition: service_started

networks:
  default:
    driver: bridge